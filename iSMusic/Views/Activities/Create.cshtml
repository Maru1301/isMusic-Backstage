@model isMusic.Models.ViewModels.ActivityCreateVM

@{
    ViewBag.Title = "Create";
    var activities = ViewBag.activityType as IEnumerable<SelectListItem>;
    var admins = ViewBag.checkedById as IEnumerable<SelectListItem>;
    var members = ViewBag.activityOrganizerId as IEnumerable<SelectListItem>;
}

<h1>建立活動</h1>


@using (Html.BeginForm("Create", "Activities", FormMethod.Post, new { enctype = "multipart/form-data" })) //要改 第一個是action 第二個是控制向
{
    @Html.AntiForgeryToken()
  
<form>
    <fieldset>
        <legend class="visually-hidden">活動表格</legend>
        <div class="d-flex">
            <div class="form-horizontal col-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.activityName, htmlAttributes: new { @class = "form-label mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.activityName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.activityName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.activityStartTime, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.activityStartTime, "DateTimePicker", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.activityStartTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.activityEndTime, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.activityEndTime, "DateTimePicker", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.activityEndTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.activityLocation, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.activityLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.activityLocation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.activityTypeId, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.activityTypeId, activities, new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.activityTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.activityInfo, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.activityInfo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.activityInfo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.activityOrganizerId, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.activityOrganizerId, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.activityOrganizerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        <input class="form-control" data-val="true" data-val-required="請選擇一張圖" type="file" name="File" id="myFile" accept="image/gif, image/jpeg, image/png, image/jpg" />
                        @*@Html.EditorFor(model => model.Path, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group d-flex mt-5">
                    @Html.LabelFor(model => model.publishedStatus, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10 margin-top-16px">
                        <div class="checkbox w-100 ms-3 margin-top-16px">
                            @Html.CheckBoxFor(model => model.publishedStatus, new { htmlAttributes = new { @class = "form-control checkbox-size" } })
                            @Html.ValidationMessageFor(model => model.publishedStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group mt-3">
                    @Html.LabelFor(model => model.checkedById, htmlAttributes: new { @class = "control-label  mt-4 fs-4 fw-bold" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.checkedById, admins, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.checkedById, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group d-block m-5 ms-auto">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-secondary" />
            </div>
        </div>
    </fieldset>
</form>
 }

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
