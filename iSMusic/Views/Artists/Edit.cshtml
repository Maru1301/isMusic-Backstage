@model iSMusic.Models.EFModels.Artist

@{
    ViewBag.Title = "Edit";
}

<h2>編輯表演者</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>*必填</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        <div class="row">
            <div class="col-md-6">
                <div class="form-group row">
                    @Html.LabelFor(model => model.artistName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.artistName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.artistName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-3">
                    @Html.LabelFor(model => model.isBand, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.RadioButtonFor(model => model.isBand, true, new
                        {
                            id = "BandTrueValue",
                            @class = "btn band"
                        }) 樂團

                        @Html.RadioButtonFor(model => model.isBand, false, new
                        {
                            id = "BandFalseValue",
                            @class = "btn band"
                        }) 單人
                        @Html.ValidationMessageFor(model => model.isBand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-3">
                    @Html.LabelFor(model => model.artistGender, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.RadioButtonFor(model => model.artistGender, true, new
                        {
                            id = "GenderTrueValue",
                            @class = "btn gender"
                        }) 男

                        @Html.RadioButtonFor(model => model.artistGender, false, new
                        {
                            id = "GenderFalseValue",
                            @class = "btn gender"
                        }) 女
                        @Html.ValidationMessageFor(model => model.artistGender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mt-3">
                    @Html.LabelFor(model => model.artistAbout, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.artistAbout, new { @class = "form-control", @rows = "10" })
                        @Html.ValidationMessageFor(model => model.artistAbout, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group d-flex justify-content-center mt-5">
                <div class="col-md-2">
                    <input type="submit" value="更新" class="btn col-md-12" style="background-color: #F68657; color: white" />
                </div>
            </div>
        </div>
    </div>
}

        <div>
            @Html.ActionLink("Back to List", "Index") |
            @Html.ActionLink("Delete", "Delete", new { id = Model.id })
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script>
        @if (@Model.isBand == true) {
            @:let isBand = document.querySelector("#BandTrueValue");
            @:isBand.setAttribute("checked", "");

            @:let genders = document.querySelectorAll(".gender");
            @:for (let gender of genders) {
                @:gender.setAttribute("disabled", "");
            @:}
        } else {
            @:let isBand = document.querySelector("#BandFalseValue");
            @:isBand.setAttribute("checked", "");

            if(Model.artistGender != null)
            {
                @:if (@Model.artistGender == true) {
                    @:let gender = document.querySelector("#GenderTrueValue");
                    @:gender.setAttribute("checked", "");
                @:} else {
                    @:let gender = document.querySelector("#GenderFalseValue");
                    @:gender.setAttribute("checked", "");
                @:}
            }

        }


        let isBands = document.querySelectorAll(".band");
        for (let isBand of isBands) {
            isBand.addEventListener("change", function () {
                let genders = document.querySelectorAll(".gender");
                if (this.value == "True") {
                    for (let gender of genders) {
                        gender.setAttribute("disabled", "");
                    }
                } else {
                    for (let gender of genders) {
                        gender.removeAttribute("disabled");
                    }
                }
            })
        }
            </script>
        }

